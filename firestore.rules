
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // Users Collection
    match /users/{userId} {
      // Anyone authenticated can create their own user document
      allow create: if request.auth != null && isOwner(userId);
      // Admins can read any user, authenticated users can read their own
      allow read: if isAdmin() || isOwner(userId);
      // Admins can update any user, users can only update their own profile (but not their role)
      allow update: if isAdmin() || (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'youtubeChannelId', 'platformsConnected', 'avatar', 'status']));
      // Only admins can delete users
      allow delete: if isAdmin();
      
      // Analytics subcollection
      match /analytics/{docId} {
        allow read: if isAdmin() || isOwner(userId);
        // Only server/admin can write analytics
        allow write: if isAdmin();
      }
    }
    
    // Protected Content Collection
    match /protectedContent/{contentId} {
        // Creators can create their own content
        allow create: if request.auth != null && request.resource.data.creatorId == request.auth.uid;
        // Creators can read their own content, admins can read all
        allow read: if isOwner(resource.data.creatorId) || isAdmin();
        // Only creators can update their own content, admins can update any
        allow update: if isOwner(resource.data.creatorId) || isAdmin();
        // Only creators or admins can delete
        allow delete: if isOwner(resource.data.creatorId) || isAdmin();
    }
    
    // Violations Collection (populated by backend)
    match /violations/{violationId} {
        // Creators can read violations related to them, admins can read all
        allow read: if isOwner(resource.data.creatorId) || isAdmin();
        // Only backend/admin can create/update violations
        allow write: if false;
    }
    
    // Manual Reports Collection
    match /manualReports/{reportId} {
        // Creators can submit reports
        allow create: if isOwner(request.resource.data.creatorId);
        // Creators read their own, admins read all
        allow read: if isOwner(resource.data.creatorId) || isAdmin();
        // Admins can update status
        allow update: if isAdmin();
        // Admins can delete
        allow delete: if isAdmin();
    }

    // Admin Actions Collection
    match /adminActions/{actionId} {
        // Only admins can read or write
        allow read, write: if isAdmin();
    }

    // Reactivation Requests
    match /reactivationRequests/{requestId} {
        // Any authenticated user can create one for themselves
        allow create: if isOwner(request.resource.data.creatorId);
        // Only admins can manage (read, update, delete)
        allow read, update, delete: if isAdmin();
    }
  }
}
